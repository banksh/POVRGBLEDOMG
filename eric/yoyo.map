Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulsi3.o)
                              main.o (__mulsi3)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o (exit)
/usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                              hal.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
LOAD accel.o
LOAD hal.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x8e2
 *(.vectors)
 .vectors       0x0000000000000000       0x28 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000028                . = ALIGN (0x2)
                0x0000000000000028                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000028        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000028                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000028                __ctors_start = .
 *(.ctors)
                0x0000000000000028                __ctors_end = .
                0x0000000000000028                __dtors_start = .
 *(.dtors)
                0x0000000000000028                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000028        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
                0x0000000000000028                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000028        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000034       0x10 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x0000000000000034                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000044        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
 *(.init9)
 *(.text)
 .text          0x0000000000000048        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
                0x0000000000000048                __vector_1
                0x0000000000000048                __vector_12
                0x0000000000000048                __bad_interrupt
                0x0000000000000048                __vector_6
                0x0000000000000048                __vector_3
                0x0000000000000048                __vector_11
                0x0000000000000048                __vector_13
                0x0000000000000048                __vector_17
                0x0000000000000048                __vector_19
                0x0000000000000048                __vector_7
                0x0000000000000048                __vector_5
                0x0000000000000048                __vector_4
                0x0000000000000048                __vector_9
                0x0000000000000048                __vector_2
                0x0000000000000048                __vector_15
                0x0000000000000048                __vector_8
                0x0000000000000048                __vector_14
                0x0000000000000048                __vector_10
                0x0000000000000048                __vector_16
                0x0000000000000048                __vector_18
 .text          0x000000000000004a      0x16c accel.o
                0x000000000000004a                accel_init
                0x0000000000000088                start_sampling
                0x00000000000000a6                get_centrifugal_acceleration
                0x0000000000000100                get_x_acceleration
                0x000000000000015e                read_accel_1
                0x0000000000000198                accel_standby
 .text          0x00000000000001b6      0x54e hal.o
                0x00000000000001b6                init
                0x0000000000000212                sleep
                0x0000000000000232                wake
                0x0000000000000252                write_leds
                0x0000000000000312                test
                0x000000000000039c                i2c_start
                0x00000000000003e2                i2c_repeated_start
                0x0000000000000428                i2c_begin_write
                0x000000000000047e                i2c_begin_read
                0x00000000000004d6                i2c_write
                0x000000000000052c                i2c_read_ack
                0x000000000000058c                i2c_read_nack
                0x00000000000005ec                i2c_stop
                0x0000000000000604                accel_read_single
                0x000000000000063e                accel_read_double
                0x0000000000000680                accel_write_single
                0x00000000000006ae                error
                0x00000000000006d2                print
 .text          0x0000000000000704      0x1a8 main.o
                0x00000000000007ec                main
 .text          0x00000000000008ac        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulsi3.o)
 .text          0x00000000000008ac        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text          0x00000000000008ac        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x00000000000008ac                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000000000008ac       0x32 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulsi3.o)
                0x00000000000008ac                __mulsi3
 .text.libgcc   0x00000000000008de        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000008de        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
                0x00000000000008de                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000008de        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
                0x00000000000008de                exit
                0x00000000000008de                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000008de        0x4 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000008e2                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000008e2
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
 .data          0x0000000000800100        0x0 accel.o
 .data          0x0000000000800100        0x0 hal.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulsi3.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100        0x4
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
 .bss           0x0000000000800100        0x0 accel.o
 .bss           0x0000000000800100        0x4 hal.o
                0x0000000000800100                black
 .bss           0x0000000000800104        0x0 main.o
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_mulsi3.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_exit.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800104                PROVIDE (__bss_end, .)
                0x00000000000008e2                __data_load_start = LOADADDR (.data)
                0x00000000000008e2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800104        0x0
                0x0000000000800104                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800104                PROVIDE (__noinit_end, .)
                0x0000000000800104                _end = .
                0x0000000000800104                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1dd0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o
 .stab          0x00000000000006cc      0x588 accel.o
                                        0x594 (size before relaxing)
 .stab          0x0000000000000c54      0xcd8 hal.o
                                        0xe4c (size before relaxing)
 .stab          0x000000000000192c      0x4a4 main.o
                                        0x678 (size before relaxing)

.stabstr        0x0000000000000000      0xb73
 *(.stabstr)
 .stabstr       0x0000000000000000      0xb73 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr25/crttn48.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(yoyo.elf elf32-avr)
LOAD linker stubs
